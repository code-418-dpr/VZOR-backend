services:
  web:
    image: web
    build:
      context: .
      dockerfile: src/VZOR.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: "vzor"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "345890"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d vzor",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=12345
      - REDIS_USER=admin
      - REDIS_USER_PASSWORD=12345
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres-data:
  redis-data:
  minio-data: