services:
  web:
    image: web:0.1
    build:
      context: .
      dockerfile: src/VZOR.Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio  
  postgres:
    container_name: postgres
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_DB: "vzor"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "345890"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d vzor",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: always
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
  redis:
    image: redis:8.0-M03-alpine3.21
    container_name: redis
    environment:
      - REDIS_PASSWORD=12345
      - REDIS_USER=admin
      - REDIS_USER_PASSWORD=12345
    ports:
      - "6380:6379"
    volumes:
      - ./redisdata:/data
  mongodb:
    image: mongo:4.4.6
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "mongoadmin"
      MONGO_INITDB_ROOT_PASSWORD: "mongopassword"
      MONGO_INITDB_DATABASE: "vzor"
    ports:
      - "27017:27017"
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_SERVER_URL = "http://localhost:9000"
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 3
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node 
      - ES_JAVA_OPTS=-Xms512m -Xmx512m 
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200" 

volumes:
  postgres-data:
  redis-data:
  minio-data:
  rabbitmq_data:
  elasticsearch_data: